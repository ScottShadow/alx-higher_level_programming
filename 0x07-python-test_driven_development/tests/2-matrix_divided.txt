>>> matrix_divided= __import__('2-matrix_divided').matrix_divided

>>> matrix0 = [[1,2,3]]

>>> matrix1 = [[1,2,3],[4,5,6],[7,8,9]]

>>> matrix2 = [[1,2,3],[4,6,7],[8,9]]

>>> matrix3 = [['a','b','c'],['d','e','f']]

>>> matrix4 = [['a', 4,"hello"],['y', 6, "dada"]]

>>> matrix5 = [[1, 2, 3], [4, 5, 6]]

#Value Tests
>>> matrix_divided(matrix0,2) #doctest: +NORMALIZE_WHITESPACE
[[0.5, 1.0, 1.5]]

>>> matrix_divided(matrix1,2) #doctest: +NORMALIZE_WHITESPACE
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]


>>> matrix_divided(matrix1,-1) #doctest: +NORMALIZE_WHITESPACE
[[-1.0, -2.0, -3.0],
 [-4.0, -5.0, -6.0],
 [-7.0, -8.0, -9.0]]

>>> matrix_divided(matrix5, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Error Tests
>>> matrix_divided(matrix2, 2) # doctest: +NORMALIZE_WHITESPACE
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided(matrix1, 0) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided(matrix3, 2) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix4, 2) # doctest: +NORMALIZE_WHITESPACE
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Error Tests with None Values
>>> matrix_divided(None, 0) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix1, None) # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: div must be a number